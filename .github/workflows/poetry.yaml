name: Build and deploy Python app to Azure Web App - Azure-Django-Web

on:
  push:
    branches:
      - Blog
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        # uses: actions/setup-python@v1
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install

      - name: Debug Poetry environment
        run: |
          which poetry
          poetry --version
          poetry show

      - name: Collect static files
        run: |
          cd firstproject
          poetry run python ./manage.py collectstatic --noinput

      - name: Zip artifact for deployment
        run: |
          zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      # url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      url: 'https://azure-django-web.azurewebsites.net/'
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E92FF502FD2F4E9580C1F664FA41F3D6 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_CBD94531A7504A8BBDF61959546303C8 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_696086DF1A5D40A6BB8587671314F5FE }}
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Configure VNet Integration
      #   run: |
      #     az webapp vnet-integration add --name 'azure-django-web' --resource-group 'deploy' --vnet 'myVNet' --subnet 'default'

      - name: Set environment variables on Azure Web App
        run: |
          az webapp config appsettings set --name 'Azure-Django-Web' --resource-group 'deploy' --settings \
            DB_NAME=${{ secrets.DB_NAME }} \
            DB_USER=${{ secrets.DB_USER }} \
            DB_PASS=${{ secrets.DB_PASS }} \
            DB_HOST=${{ secrets.DB_HOST }} \
            SECRET_KEY='${{ secrets.SECRET_KEY }}' \
            PORT=8000 \
            WEBSITE_PORT=8000 \
            WEBSITES_PORT=8000 \
            WEBSITE_RUN_FROM_PACKAGE=1 

      - name: Set up Python version
        # uses: actions/setup-python@v1
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install
          poetry show
          ls
      
      - name: Debug Poetry environment
        run: |
          which poetry
          poetry --version
          python --version

      - name: Start Gunicorn
        run: |
          cd firstproject
          poetry run gunicorn --bind 0.0.0.0:8000 --timeout 600 wsgi:application


 #         poetry run gunicorn --bind 0.0.0.0 --timeout 600 --chdir firstproject.wsgi:application     
      # - name: Deploy to Azure Web App
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: 'Azure-Django-Web'
      #     slot-name: 'Production'
      #     publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}



